# -*- coding: utf-8 -*-
"""preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ybdjowwQJz4R9Z_j3oCcrP9HObVIvt3b

# PREPROCESSING - Data downloading and separation into various folders
"""

## imports necessary utils and dependencies
import shutil
import re
import os
import random

## splits indices for a folder into train and validation indices with random sampling
    ## input: folder path and seed
    ## output: train and validation indices

def split_indices(folder,seed):
    n = len(os.listdir(folder))
    full_set = list(range(0,n))

    ## train and valid indices
    random.seed(seed)
    train = random.sample(list(range(0,n)),int(.8*n))
    valid = list(set(full_set)-set(train))

    return(train, valid)

## gets file names for a particular type of trash, given indices
    ## input: waste indices
    ## output: file names
def get_names(indices):
    stringed_indices = list()
    for i in indices:
        if i < 10:
            stringed_indices.append("0" + str(i))
        else:
            stringed_indices.append(str(i))
    file_names = ["00" + a + ".jpg" for a in stringed_indices]
    return(file_names)

## renames the images according to their classification:
def rename_files(folder):
    names = os.listdir(folder)
    for name in names:
        new_name = label + '_' + str(name[2:4]) + '.jpg'
        src = folder + '/' + name
        dst = folder + '/' + new_name
        os.rename(src, dst)


## moves group of source files to another folder
    ## input: list of source files and destination folder
    ## no output
def move_files(source_files,destination_folder):
    for file in source_files:
        shutil.move(file,destination_folder)
        
def preprocess():

  subsets = ['train', 'valid']
  labels = ['cleaned', 'dirty']

  for subset in subsets:
      for label in labels:
          folder = os.path.join('dishes',subset,label)
          if not os.path.exists(folder):
              os.makedirs(folder)

  for label in labels:
      source_folder = os.path.join('plates','train', label)
      train_indices, val_indices = split_indices(source_folder, 42)

      ## move source files to train folder
      train_names = get_names(train_indices)
      train_source_files = [os.path.join(source_folder,name) for name in train_names]
      train_dest = "dishes/train/" + label
      move_files(train_source_files,train_dest)
      rename_files(train_dest)

      ## move source files to valid folder
      valid_names = get_names(val_indices)
      valid_source_files = [os.path.join(source_folder,name) for name in valid_names]
      valid_dest = "dishes/valid/" + label
      move_files(valid_source_files,valid_dest)
      rename_files(valid_dest)

## run preprocessing.py as the main module
if __name__ == '__main__':
  preprocess()